# Global values
nameOverride: ""
fullnameOverride: ""
replicaCount: 1

# Autoscaling configuration
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Pod configuration
podAnnotations: {}
podSecurityContext: {}
nodeSelector: {}
tolerations: []
affinity: {}

# Service account configuration
serviceAccount:
  create: true
  annotations: {}
  name: ""

# PostgreSQL database configuration
postgresql:
  # Set to true to deploy PostgreSQL as part of this chart
  enabled: true
  image:
    repository: postgres
    tag: "16-alpine"
    pullPolicy: IfNotPresent

  # Database configuration
  auth:
    database: kaneo
    username: kaneo_user
    password: kaneo_password
    # Use existing secret for database credentials (optional)
    existingSecret: ""
    secretKeys:
      adminPasswordKey: postgres-password
      userPasswordKey: password

  # Persistence for PostgreSQL data
  persistence:
    enabled: true
    size: 8Gi
    storageClass: ""
    accessMode: ReadWriteOnce

  # PostgreSQL service configuration
  service:
    type: ClusterIP
    port: 5432

  # Resources for PostgreSQL
  resources: {}
  # resources:
  #   limits:
  #     cpu: 500m
  #     memory: 512Mi
  #   requests:
  #     cpu: 100m
  #     memory: 128Mi

# API backend configuration
api:
  image:
    repository: ghcr.io/usekaneo/api
    tag: latest
    pullPolicy: IfNotPresent

  securityContext: {}

  service:
    type: ClusterIP
    port: 1337
    targetPort: 1337

  # Resources are optional and disabled by default
  resources: {}
  # resources:
  #   limits:
  #     cpu: 500m
  #     memory: 512Mi
  #   requests:
  #     cpu: 100m
  #     memory: 128Mi

  # Environment variables for the API
  env:
    jwtAccess: "change_me"
    existingSecret:
      enabled: false
      name: ""
      key: "jwt-access"
    disableRegistration: false

    # Database configuration
    database:
      # Use external PostgreSQL (set postgresql.enabled to false)
      external:
        enabled: false
        host: ""
        port: 5432
        database: kaneo
        username: kaneo_user
        password: ""
        # Use existing secret for external database credentials
        existingSecret:
          enabled: false
          name: ""
          passwordKey: "password"

  livenessProbe:
    httpGet:
      path: /me
      port: api
    initialDelaySeconds: 30
    periodSeconds: 10

  readinessProbe:
    httpGet:
      path: /me
      port: api
    initialDelaySeconds: 5
    periodSeconds: 10

# Web frontend configuration
web:
  image:
    repository: ghcr.io/usekaneo/web
    tag: latest
    pullPolicy: IfNotPresent

  # Environment variables for the Web
  env:
    # Optional: Override the default API URL (http://localhost:1337)
    # The /api path will be automatically appended to the URL
    # apiUrl: "https://kaneo.example.com"
    apiUrl: ""

  securityContext: {}

  service:
    type: ClusterIP
    port: 80
    targetPort: 80

  # Resources are optional and disabled by default
  resources: {}
  # resources:
  #   limits:
  #     cpu: 300m
  #     memory: 256Mi
  #   requests:
  #     cpu: 100m
  #     memory: 128Mi

  livenessProbe:
    httpGet:
      path: /
      port: web
    initialDelaySeconds: 30
    periodSeconds: 10

  readinessProbe:
    httpGet:
      path: /
      port: web
    initialDelaySeconds: 5
    periodSeconds: 10

# Ingress configuration
ingress:
  enabled: false
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    # When using nginx ingress controller, these annotations provide URL rewriting
    # similar to the URLRewrite filter in the Gateway API
    # Other ingress controllers may require different annotations, handle carefully
    # because it can break the API calls from the frontend to the backend
  hosts:
    # Use the same host in the web env variable apiUrl (with http:// or https://)
    - host: kaneo.local
      paths:
        - path: /?(.*)
          pathType: Prefix
          service: web
          port: 80
        - path: /api/?(.*)
          pathType: Prefix
          service: api
          port: 1337
  tls: []
