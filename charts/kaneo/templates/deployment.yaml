apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kaneo.fullname" . }}
  labels:
    {{- include "kaneo.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "kaneo.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kaneo.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "kaneo.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: api
          securityContext:
            {{- toYaml .Values.api.securityContext | nindent 12 }}
          image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          ports:
            - name: api
              containerPort: {{ .Values.api.service.targetPort }}
              protocol: TCP
          env:
            - name: JWT_ACCESS
              {{- if .Values.api.env.existingSecret.enabled }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.api.env.existingSecret.name }}
                  key: {{ .Values.api.env.existingSecret.key }}
              {{- else }}
              value: "{{ .Values.api.env.jwtAccess }}"
              {{- end }}
            - name: DATABASE_URL
              {{- if .Values.api.env.database.external.enabled }}
              {{- if .Values.api.env.database.external.existingSecret.enabled }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.api.env.database.external.existingSecret.name }}
                  key: {{ .Values.api.env.database.external.existingSecret.passwordKey }}
              {{- else }}
              value: "postgresql://{{ .Values.api.env.database.external.username }}:{{ .Values.api.env.database.external.password }}@{{ .Values.api.env.database.external.host }}:{{ .Values.api.env.database.external.port }}/{{ .Values.api.env.database.external.database }}"
              {{- end }}
              {{- else }}
              value: "postgresql://{{ .Values.postgresql.auth.username }}:{{ .Values.postgresql.auth.password }}@{{ include "kaneo.fullname" . }}-postgresql:{{ .Values.postgresql.service.port }}/{{ .Values.postgresql.auth.database }}"
              {{- end }}
            - name: DISABLE_REGISTRATION
              value: {{ .Values.api.env.disableRegistration | quote }}
          livenessProbe:
            {{- toYaml .Values.api.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.api.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}

        - name: web
          securityContext:
            {{- toYaml .Values.web.securityContext | nindent 12 }}
          image: "{{ .Values.web.image.repository }}:{{ .Values.web.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.web.image.pullPolicy }}
          ports:
            - name: web
              containerPort: 5173
              protocol: TCP
          env:
            - name: KANEO_API_URL
              value: "{{- if .Values.web.env.apiUrl -}}
                {{- if hasSuffix "/" .Values.web.env.apiUrl -}}
                  {{- .Values.web.env.apiUrl -}}api
                {{- else -}}
                  {{- .Values.web.env.apiUrl -}}/api
                {{- end -}}
              {{- else -}}
                http://localhost:{{ .Values.api.service.targetPort }}
              {{- end -}}"
          livenessProbe:
            httpGet:
              path: /
              port: web
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: web
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml .Values.web.resources | nindent 12 }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
