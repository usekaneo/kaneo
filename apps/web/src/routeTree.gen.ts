/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PublicProjectProjectIdRouteImport } from './routes/public-project.$projectId'
import { Route as DashboardSettingsRouteImport } from './routes/dashboard/settings'
import { Route as AuthSignUpRouteImport } from './routes/auth/sign-up'
import { Route as AuthSignInRouteImport } from './routes/auth/sign-in'
import { Route as DashboardWorkspaceWorkspaceIdRouteImport } from './routes/dashboard/workspace/$workspaceId'
import { Route as DashboardSettingsAppearanceRouteImport } from './routes/dashboard/settings/appearance'
import { Route as DashboardWorkspaceSettingsWorkspaceIdIndexRouteImport } from './routes/dashboard/workspace-settings/$workspaceId/index'
import { Route as DashboardTeamsWorkspaceIdLayoutRouteImport } from './routes/dashboard/teams/$workspaceId/_layout'
import { Route as DashboardWorkspaceWorkspaceIdProjectProjectIdRouteImport } from './routes/dashboard/workspace/$workspaceId/project/$projectId'
import { Route as DashboardTeamsWorkspaceIdLayoutRolesRouteImport } from './routes/dashboard/teams/$workspaceId/_layout.roles'
import { Route as DashboardTeamsWorkspaceIdLayoutMembersRouteImport } from './routes/dashboard/teams/$workspaceId/_layout.members'
import { Route as DashboardWorkspaceWorkspaceIdProjectProjectIdSettingsRouteImport } from './routes/dashboard/workspace/$workspaceId/project/$projectId/settings'
import { Route as DashboardWorkspaceWorkspaceIdProjectProjectIdBoardRouteImport } from './routes/dashboard/workspace/$workspaceId/project/$projectId/board'
import { Route as DashboardWorkspaceWorkspaceIdProjectProjectIdBacklogRouteImport } from './routes/dashboard/workspace/$workspaceId/project/$projectId/backlog'
import { Route as DashboardWorkspaceWorkspaceIdProjectProjectIdTaskTaskIdRouteImport } from './routes/dashboard/workspace/$workspaceId/project/$projectId/task/$taskId'

const DashboardTeamsWorkspaceIdRouteImport = createFileRoute(
  '/dashboard/teams/$workspaceId',
)()

const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PublicProjectProjectIdRoute = PublicProjectProjectIdRouteImport.update({
  id: '/public-project/$projectId',
  path: '/public-project/$projectId',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardSettingsRoute = DashboardSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => DashboardRoute,
} as any)
const AuthSignUpRoute = AuthSignUpRouteImport.update({
  id: '/auth/sign-up',
  path: '/auth/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignInRoute = AuthSignInRouteImport.update({
  id: '/auth/sign-in',
  path: '/auth/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardTeamsWorkspaceIdRoute =
  DashboardTeamsWorkspaceIdRouteImport.update({
    id: '/teams/$workspaceId',
    path: '/teams/$workspaceId',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardWorkspaceWorkspaceIdRoute =
  DashboardWorkspaceWorkspaceIdRouteImport.update({
    id: '/workspace/$workspaceId',
    path: '/workspace/$workspaceId',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardSettingsAppearanceRoute =
  DashboardSettingsAppearanceRouteImport.update({
    id: '/appearance',
    path: '/appearance',
    getParentRoute: () => DashboardSettingsRoute,
  } as any)
const DashboardWorkspaceSettingsWorkspaceIdIndexRoute =
  DashboardWorkspaceSettingsWorkspaceIdIndexRouteImport.update({
    id: '/workspace-settings/$workspaceId/',
    path: '/workspace-settings/$workspaceId/',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardTeamsWorkspaceIdLayoutRoute =
  DashboardTeamsWorkspaceIdLayoutRouteImport.update({
    id: '/_layout',
    getParentRoute: () => DashboardTeamsWorkspaceIdRoute,
  } as any)
const DashboardWorkspaceWorkspaceIdProjectProjectIdRoute =
  DashboardWorkspaceWorkspaceIdProjectProjectIdRouteImport.update({
    id: '/project/$projectId',
    path: '/project/$projectId',
    getParentRoute: () => DashboardWorkspaceWorkspaceIdRoute,
  } as any)
const DashboardTeamsWorkspaceIdLayoutRolesRoute =
  DashboardTeamsWorkspaceIdLayoutRolesRouteImport.update({
    id: '/roles',
    path: '/roles',
    getParentRoute: () => DashboardTeamsWorkspaceIdLayoutRoute,
  } as any)
const DashboardTeamsWorkspaceIdLayoutMembersRoute =
  DashboardTeamsWorkspaceIdLayoutMembersRouteImport.update({
    id: '/members',
    path: '/members',
    getParentRoute: () => DashboardTeamsWorkspaceIdLayoutRoute,
  } as any)
const DashboardWorkspaceWorkspaceIdProjectProjectIdSettingsRoute =
  DashboardWorkspaceWorkspaceIdProjectProjectIdSettingsRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => DashboardWorkspaceWorkspaceIdProjectProjectIdRoute,
  } as any)
const DashboardWorkspaceWorkspaceIdProjectProjectIdBoardRoute =
  DashboardWorkspaceWorkspaceIdProjectProjectIdBoardRouteImport.update({
    id: '/board',
    path: '/board',
    getParentRoute: () => DashboardWorkspaceWorkspaceIdProjectProjectIdRoute,
  } as any)
const DashboardWorkspaceWorkspaceIdProjectProjectIdBacklogRoute =
  DashboardWorkspaceWorkspaceIdProjectProjectIdBacklogRouteImport.update({
    id: '/backlog',
    path: '/backlog',
    getParentRoute: () => DashboardWorkspaceWorkspaceIdProjectProjectIdRoute,
  } as any)
const DashboardWorkspaceWorkspaceIdProjectProjectIdTaskTaskIdRoute =
  DashboardWorkspaceWorkspaceIdProjectProjectIdTaskTaskIdRouteImport.update({
    id: '/task/$taskId',
    path: '/task/$taskId',
    getParentRoute: () => DashboardWorkspaceWorkspaceIdProjectProjectIdRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/dashboard/settings': typeof DashboardSettingsRouteWithChildren
  '/public-project/$projectId': typeof PublicProjectProjectIdRoute
  '/dashboard/settings/appearance': typeof DashboardSettingsAppearanceRoute
  '/dashboard/workspace/$workspaceId': typeof DashboardWorkspaceWorkspaceIdRouteWithChildren
  '/dashboard/teams/$workspaceId': typeof DashboardTeamsWorkspaceIdLayoutRouteWithChildren
  '/dashboard/workspace-settings/$workspaceId': typeof DashboardWorkspaceSettingsWorkspaceIdIndexRoute
  '/dashboard/teams/$workspaceId/members': typeof DashboardTeamsWorkspaceIdLayoutMembersRoute
  '/dashboard/teams/$workspaceId/roles': typeof DashboardTeamsWorkspaceIdLayoutRolesRoute
  '/dashboard/workspace/$workspaceId/project/$projectId': typeof DashboardWorkspaceWorkspaceIdProjectProjectIdRouteWithChildren
  '/dashboard/workspace/$workspaceId/project/$projectId/backlog': typeof DashboardWorkspaceWorkspaceIdProjectProjectIdBacklogRoute
  '/dashboard/workspace/$workspaceId/project/$projectId/board': typeof DashboardWorkspaceWorkspaceIdProjectProjectIdBoardRoute
  '/dashboard/workspace/$workspaceId/project/$projectId/settings': typeof DashboardWorkspaceWorkspaceIdProjectProjectIdSettingsRoute
  '/dashboard/workspace/$workspaceId/project/$projectId/task/$taskId': typeof DashboardWorkspaceWorkspaceIdProjectProjectIdTaskTaskIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/dashboard/settings': typeof DashboardSettingsRouteWithChildren
  '/public-project/$projectId': typeof PublicProjectProjectIdRoute
  '/dashboard/settings/appearance': typeof DashboardSettingsAppearanceRoute
  '/dashboard/workspace/$workspaceId': typeof DashboardWorkspaceWorkspaceIdRouteWithChildren
  '/dashboard/teams/$workspaceId': typeof DashboardTeamsWorkspaceIdLayoutRouteWithChildren
  '/dashboard/workspace-settings/$workspaceId': typeof DashboardWorkspaceSettingsWorkspaceIdIndexRoute
  '/dashboard/teams/$workspaceId/members': typeof DashboardTeamsWorkspaceIdLayoutMembersRoute
  '/dashboard/teams/$workspaceId/roles': typeof DashboardTeamsWorkspaceIdLayoutRolesRoute
  '/dashboard/workspace/$workspaceId/project/$projectId': typeof DashboardWorkspaceWorkspaceIdProjectProjectIdRouteWithChildren
  '/dashboard/workspace/$workspaceId/project/$projectId/backlog': typeof DashboardWorkspaceWorkspaceIdProjectProjectIdBacklogRoute
  '/dashboard/workspace/$workspaceId/project/$projectId/board': typeof DashboardWorkspaceWorkspaceIdProjectProjectIdBoardRoute
  '/dashboard/workspace/$workspaceId/project/$projectId/settings': typeof DashboardWorkspaceWorkspaceIdProjectProjectIdSettingsRoute
  '/dashboard/workspace/$workspaceId/project/$projectId/task/$taskId': typeof DashboardWorkspaceWorkspaceIdProjectProjectIdTaskTaskIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/dashboard/settings': typeof DashboardSettingsRouteWithChildren
  '/public-project/$projectId': typeof PublicProjectProjectIdRoute
  '/dashboard/settings/appearance': typeof DashboardSettingsAppearanceRoute
  '/dashboard/workspace/$workspaceId': typeof DashboardWorkspaceWorkspaceIdRouteWithChildren
  '/dashboard/teams/$workspaceId': typeof DashboardTeamsWorkspaceIdRouteWithChildren
  '/dashboard/teams/$workspaceId/_layout': typeof DashboardTeamsWorkspaceIdLayoutRouteWithChildren
  '/dashboard/workspace-settings/$workspaceId/': typeof DashboardWorkspaceSettingsWorkspaceIdIndexRoute
  '/dashboard/teams/$workspaceId/_layout/members': typeof DashboardTeamsWorkspaceIdLayoutMembersRoute
  '/dashboard/teams/$workspaceId/_layout/roles': typeof DashboardTeamsWorkspaceIdLayoutRolesRoute
  '/dashboard/workspace/$workspaceId/project/$projectId': typeof DashboardWorkspaceWorkspaceIdProjectProjectIdRouteWithChildren
  '/dashboard/workspace/$workspaceId/project/$projectId/backlog': typeof DashboardWorkspaceWorkspaceIdProjectProjectIdBacklogRoute
  '/dashboard/workspace/$workspaceId/project/$projectId/board': typeof DashboardWorkspaceWorkspaceIdProjectProjectIdBoardRoute
  '/dashboard/workspace/$workspaceId/project/$projectId/settings': typeof DashboardWorkspaceWorkspaceIdProjectProjectIdSettingsRoute
  '/dashboard/workspace/$workspaceId/project/$projectId/task/$taskId': typeof DashboardWorkspaceWorkspaceIdProjectProjectIdTaskTaskIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/dashboard/settings'
    | '/public-project/$projectId'
    | '/dashboard/settings/appearance'
    | '/dashboard/workspace/$workspaceId'
    | '/dashboard/teams/$workspaceId'
    | '/dashboard/workspace-settings/$workspaceId'
    | '/dashboard/teams/$workspaceId/members'
    | '/dashboard/teams/$workspaceId/roles'
    | '/dashboard/workspace/$workspaceId/project/$projectId'
    | '/dashboard/workspace/$workspaceId/project/$projectId/backlog'
    | '/dashboard/workspace/$workspaceId/project/$projectId/board'
    | '/dashboard/workspace/$workspaceId/project/$projectId/settings'
    | '/dashboard/workspace/$workspaceId/project/$projectId/task/$taskId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/dashboard/settings'
    | '/public-project/$projectId'
    | '/dashboard/settings/appearance'
    | '/dashboard/workspace/$workspaceId'
    | '/dashboard/teams/$workspaceId'
    | '/dashboard/workspace-settings/$workspaceId'
    | '/dashboard/teams/$workspaceId/members'
    | '/dashboard/teams/$workspaceId/roles'
    | '/dashboard/workspace/$workspaceId/project/$projectId'
    | '/dashboard/workspace/$workspaceId/project/$projectId/backlog'
    | '/dashboard/workspace/$workspaceId/project/$projectId/board'
    | '/dashboard/workspace/$workspaceId/project/$projectId/settings'
    | '/dashboard/workspace/$workspaceId/project/$projectId/task/$taskId'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/dashboard/settings'
    | '/public-project/$projectId'
    | '/dashboard/settings/appearance'
    | '/dashboard/workspace/$workspaceId'
    | '/dashboard/teams/$workspaceId'
    | '/dashboard/teams/$workspaceId/_layout'
    | '/dashboard/workspace-settings/$workspaceId/'
    | '/dashboard/teams/$workspaceId/_layout/members'
    | '/dashboard/teams/$workspaceId/_layout/roles'
    | '/dashboard/workspace/$workspaceId/project/$projectId'
    | '/dashboard/workspace/$workspaceId/project/$projectId/backlog'
    | '/dashboard/workspace/$workspaceId/project/$projectId/board'
    | '/dashboard/workspace/$workspaceId/project/$projectId/settings'
    | '/dashboard/workspace/$workspaceId/project/$projectId/task/$taskId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
  PublicProjectProjectIdRoute: typeof PublicProjectProjectIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/public-project/$projectId': {
      id: '/public-project/$projectId'
      path: '/public-project/$projectId'
      fullPath: '/public-project/$projectId'
      preLoaderRoute: typeof PublicProjectProjectIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/settings': {
      id: '/dashboard/settings'
      path: '/settings'
      fullPath: '/dashboard/settings'
      preLoaderRoute: typeof DashboardSettingsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/auth/sign-up': {
      id: '/auth/sign-up'
      path: '/auth/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/teams/$workspaceId': {
      id: '/dashboard/teams/$workspaceId'
      path: '/teams/$workspaceId'
      fullPath: '/dashboard/teams/$workspaceId'
      preLoaderRoute: typeof DashboardTeamsWorkspaceIdRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/workspace/$workspaceId': {
      id: '/dashboard/workspace/$workspaceId'
      path: '/workspace/$workspaceId'
      fullPath: '/dashboard/workspace/$workspaceId'
      preLoaderRoute: typeof DashboardWorkspaceWorkspaceIdRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/settings/appearance': {
      id: '/dashboard/settings/appearance'
      path: '/appearance'
      fullPath: '/dashboard/settings/appearance'
      preLoaderRoute: typeof DashboardSettingsAppearanceRouteImport
      parentRoute: typeof DashboardSettingsRoute
    }
    '/dashboard/workspace-settings/$workspaceId/': {
      id: '/dashboard/workspace-settings/$workspaceId/'
      path: '/workspace-settings/$workspaceId'
      fullPath: '/dashboard/workspace-settings/$workspaceId'
      preLoaderRoute: typeof DashboardWorkspaceSettingsWorkspaceIdIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/teams/$workspaceId/_layout': {
      id: '/dashboard/teams/$workspaceId/_layout'
      path: '/teams/$workspaceId'
      fullPath: '/dashboard/teams/$workspaceId'
      preLoaderRoute: typeof DashboardTeamsWorkspaceIdLayoutRouteImport
      parentRoute: typeof DashboardTeamsWorkspaceIdRoute
    }
    '/dashboard/workspace/$workspaceId/project/$projectId': {
      id: '/dashboard/workspace/$workspaceId/project/$projectId'
      path: '/project/$projectId'
      fullPath: '/dashboard/workspace/$workspaceId/project/$projectId'
      preLoaderRoute: typeof DashboardWorkspaceWorkspaceIdProjectProjectIdRouteImport
      parentRoute: typeof DashboardWorkspaceWorkspaceIdRoute
    }
    '/dashboard/teams/$workspaceId/_layout/roles': {
      id: '/dashboard/teams/$workspaceId/_layout/roles'
      path: '/roles'
      fullPath: '/dashboard/teams/$workspaceId/roles'
      preLoaderRoute: typeof DashboardTeamsWorkspaceIdLayoutRolesRouteImport
      parentRoute: typeof DashboardTeamsWorkspaceIdLayoutRoute
    }
    '/dashboard/teams/$workspaceId/_layout/members': {
      id: '/dashboard/teams/$workspaceId/_layout/members'
      path: '/members'
      fullPath: '/dashboard/teams/$workspaceId/members'
      preLoaderRoute: typeof DashboardTeamsWorkspaceIdLayoutMembersRouteImport
      parentRoute: typeof DashboardTeamsWorkspaceIdLayoutRoute
    }
    '/dashboard/workspace/$workspaceId/project/$projectId/settings': {
      id: '/dashboard/workspace/$workspaceId/project/$projectId/settings'
      path: '/settings'
      fullPath: '/dashboard/workspace/$workspaceId/project/$projectId/settings'
      preLoaderRoute: typeof DashboardWorkspaceWorkspaceIdProjectProjectIdSettingsRouteImport
      parentRoute: typeof DashboardWorkspaceWorkspaceIdProjectProjectIdRoute
    }
    '/dashboard/workspace/$workspaceId/project/$projectId/board': {
      id: '/dashboard/workspace/$workspaceId/project/$projectId/board'
      path: '/board'
      fullPath: '/dashboard/workspace/$workspaceId/project/$projectId/board'
      preLoaderRoute: typeof DashboardWorkspaceWorkspaceIdProjectProjectIdBoardRouteImport
      parentRoute: typeof DashboardWorkspaceWorkspaceIdProjectProjectIdRoute
    }
    '/dashboard/workspace/$workspaceId/project/$projectId/backlog': {
      id: '/dashboard/workspace/$workspaceId/project/$projectId/backlog'
      path: '/backlog'
      fullPath: '/dashboard/workspace/$workspaceId/project/$projectId/backlog'
      preLoaderRoute: typeof DashboardWorkspaceWorkspaceIdProjectProjectIdBacklogRouteImport
      parentRoute: typeof DashboardWorkspaceWorkspaceIdProjectProjectIdRoute
    }
    '/dashboard/workspace/$workspaceId/project/$projectId/task/$taskId': {
      id: '/dashboard/workspace/$workspaceId/project/$projectId/task/$taskId'
      path: '/task/$taskId'
      fullPath: '/dashboard/workspace/$workspaceId/project/$projectId/task/$taskId'
      preLoaderRoute: typeof DashboardWorkspaceWorkspaceIdProjectProjectIdTaskTaskIdRouteImport
      parentRoute: typeof DashboardWorkspaceWorkspaceIdProjectProjectIdRoute
    }
  }
}

interface DashboardSettingsRouteChildren {
  DashboardSettingsAppearanceRoute: typeof DashboardSettingsAppearanceRoute
}

const DashboardSettingsRouteChildren: DashboardSettingsRouteChildren = {
  DashboardSettingsAppearanceRoute: DashboardSettingsAppearanceRoute,
}

const DashboardSettingsRouteWithChildren =
  DashboardSettingsRoute._addFileChildren(DashboardSettingsRouteChildren)

interface DashboardWorkspaceWorkspaceIdProjectProjectIdRouteChildren {
  DashboardWorkspaceWorkspaceIdProjectProjectIdBacklogRoute: typeof DashboardWorkspaceWorkspaceIdProjectProjectIdBacklogRoute
  DashboardWorkspaceWorkspaceIdProjectProjectIdBoardRoute: typeof DashboardWorkspaceWorkspaceIdProjectProjectIdBoardRoute
  DashboardWorkspaceWorkspaceIdProjectProjectIdSettingsRoute: typeof DashboardWorkspaceWorkspaceIdProjectProjectIdSettingsRoute
  DashboardWorkspaceWorkspaceIdProjectProjectIdTaskTaskIdRoute: typeof DashboardWorkspaceWorkspaceIdProjectProjectIdTaskTaskIdRoute
}

const DashboardWorkspaceWorkspaceIdProjectProjectIdRouteChildren: DashboardWorkspaceWorkspaceIdProjectProjectIdRouteChildren =
  {
    DashboardWorkspaceWorkspaceIdProjectProjectIdBacklogRoute:
      DashboardWorkspaceWorkspaceIdProjectProjectIdBacklogRoute,
    DashboardWorkspaceWorkspaceIdProjectProjectIdBoardRoute:
      DashboardWorkspaceWorkspaceIdProjectProjectIdBoardRoute,
    DashboardWorkspaceWorkspaceIdProjectProjectIdSettingsRoute:
      DashboardWorkspaceWorkspaceIdProjectProjectIdSettingsRoute,
    DashboardWorkspaceWorkspaceIdProjectProjectIdTaskTaskIdRoute:
      DashboardWorkspaceWorkspaceIdProjectProjectIdTaskTaskIdRoute,
  }

const DashboardWorkspaceWorkspaceIdProjectProjectIdRouteWithChildren =
  DashboardWorkspaceWorkspaceIdProjectProjectIdRoute._addFileChildren(
    DashboardWorkspaceWorkspaceIdProjectProjectIdRouteChildren,
  )

interface DashboardWorkspaceWorkspaceIdRouteChildren {
  DashboardWorkspaceWorkspaceIdProjectProjectIdRoute: typeof DashboardWorkspaceWorkspaceIdProjectProjectIdRouteWithChildren
}

const DashboardWorkspaceWorkspaceIdRouteChildren: DashboardWorkspaceWorkspaceIdRouteChildren =
  {
    DashboardWorkspaceWorkspaceIdProjectProjectIdRoute:
      DashboardWorkspaceWorkspaceIdProjectProjectIdRouteWithChildren,
  }

const DashboardWorkspaceWorkspaceIdRouteWithChildren =
  DashboardWorkspaceWorkspaceIdRoute._addFileChildren(
    DashboardWorkspaceWorkspaceIdRouteChildren,
  )

interface DashboardTeamsWorkspaceIdLayoutRouteChildren {
  DashboardTeamsWorkspaceIdLayoutMembersRoute: typeof DashboardTeamsWorkspaceIdLayoutMembersRoute
  DashboardTeamsWorkspaceIdLayoutRolesRoute: typeof DashboardTeamsWorkspaceIdLayoutRolesRoute
}

const DashboardTeamsWorkspaceIdLayoutRouteChildren: DashboardTeamsWorkspaceIdLayoutRouteChildren =
  {
    DashboardTeamsWorkspaceIdLayoutMembersRoute:
      DashboardTeamsWorkspaceIdLayoutMembersRoute,
    DashboardTeamsWorkspaceIdLayoutRolesRoute:
      DashboardTeamsWorkspaceIdLayoutRolesRoute,
  }

const DashboardTeamsWorkspaceIdLayoutRouteWithChildren =
  DashboardTeamsWorkspaceIdLayoutRoute._addFileChildren(
    DashboardTeamsWorkspaceIdLayoutRouteChildren,
  )

interface DashboardTeamsWorkspaceIdRouteChildren {
  DashboardTeamsWorkspaceIdLayoutRoute: typeof DashboardTeamsWorkspaceIdLayoutRouteWithChildren
}

const DashboardTeamsWorkspaceIdRouteChildren: DashboardTeamsWorkspaceIdRouteChildren =
  {
    DashboardTeamsWorkspaceIdLayoutRoute:
      DashboardTeamsWorkspaceIdLayoutRouteWithChildren,
  }

const DashboardTeamsWorkspaceIdRouteWithChildren =
  DashboardTeamsWorkspaceIdRoute._addFileChildren(
    DashboardTeamsWorkspaceIdRouteChildren,
  )

interface DashboardRouteChildren {
  DashboardSettingsRoute: typeof DashboardSettingsRouteWithChildren
  DashboardWorkspaceWorkspaceIdRoute: typeof DashboardWorkspaceWorkspaceIdRouteWithChildren
  DashboardTeamsWorkspaceIdRoute: typeof DashboardTeamsWorkspaceIdRouteWithChildren
  DashboardWorkspaceSettingsWorkspaceIdIndexRoute: typeof DashboardWorkspaceSettingsWorkspaceIdIndexRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardSettingsRoute: DashboardSettingsRouteWithChildren,
  DashboardWorkspaceWorkspaceIdRoute:
    DashboardWorkspaceWorkspaceIdRouteWithChildren,
  DashboardTeamsWorkspaceIdRoute: DashboardTeamsWorkspaceIdRouteWithChildren,
  DashboardWorkspaceSettingsWorkspaceIdIndexRoute:
    DashboardWorkspaceSettingsWorkspaceIdIndexRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRouteWithChildren,
  AuthSignInRoute: AuthSignInRoute,
  AuthSignUpRoute: AuthSignUpRoute,
  PublicProjectProjectIdRoute: PublicProjectProjectIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
