services:
  watchtower:
    image: containrrr/watchtower
    command:
      - "--label-enable"
      - "--interval"
      - "30"
      - "--rolling-restart"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  traefik:
    image: "traefik:v3.3"
    container_name: "traefik"
    command:
      - "--providers.docker=true"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
    ports:
      - "80:80"
      - "443:443"
    networks:
      - traefik-net
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: kaneo
      POSTGRES_USER: kaneo_user
      POSTGRES_PASSWORD: kaneo_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - traefik-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kaneo_user -d kaneo"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    image: ghcr.io/usekaneo/api:latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`demo-api.kaneo.app`)"
      - "traefik.http.routers.backend.entrypoints=web"
      - "com.centurylinklabs.watchtower.enable=true"
      - "com.centurylinklabs.watchtower.enable-volume-preservation=true"
    environment:
      JWT_ACCESS: "change_me"
      DATABASE_URL: "postgresql://kaneo_user:kaneo_password@postgres:5432/kaneo"
      DEMO_MODE: "true"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - traefik-net
    restart: unless-stopped

  frontend:
    image: ghcr.io/usekaneo/web:latest
    environment:
      KANEO_API_URL: "https://demo-api.kaneo.app"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`demo.kaneo.app`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "com.centurylinklabs.watchtower.enable=true"
    restart: unless-stopped
    networks:
      - traefik-net

networks:
  traefik-net:
    driver: bridge

volumes:
  postgres_data:
    name: kaneo_postgres_data
